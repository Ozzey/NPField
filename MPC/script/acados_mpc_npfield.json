{
    "acados_include_path": "/home/ozzey/Desktop/Projects/NPField/acados/include",
    "acados_lib_path": "/home/ozzey/Desktop/Projects/NPField/acados/lib",
    "code_export_directory": "/home/ozzey/Desktop/Projects/NPField/MPC/script/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_0": "BGH",
        "constr_type_e": "BGH",
        "has_x0": true,
        "idxbu": [
            0,
            1,
            2
        ],
        "idxbx": [
            0,
            1,
            2,
            3,
            4
        ],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4
        ],
        "idxsbu": [],
        "idxsbx": [],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [],
        "idxsh_0": [],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_0": [],
        "idxsphi_e": [],
        "lbu": [
            -0.35,
            -0.4,
            0.2
        ],
        "lbx": [
            -100,
            -100,
            0,
            -100,
            0
        ],
        "lbx_0": [
            0,
            0,
            0,
            0,
            0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [],
        "lh_0": [],
        "lh_e": [],
        "lphi": [],
        "lphi_0": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [],
        "lsh_0": [],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_0": [],
        "lsphi_e": [],
        "ubu": [
            0.35,
            0.4,
            10.0
        ],
        "ubx": [
            100,
            100,
            1,
            100,
            100
        ],
        "ubx_0": [
            0,
            0,
            0,
            0,
            0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [],
        "uh_0": [],
        "uh_e": [],
        "uphi": [],
        "uphi_0": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [],
        "ush_0": [],
        "ush_e": [],
        "usphi": [],
        "usphi_0": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [
            [
                0.1,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.1,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.05,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.1,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                3000.0
            ]
        ],
        "W_0": [
            [
                0.1,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.1,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.05,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.1,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                3000.0
            ]
        ],
        "W_e": [
            [
                30.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                30.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.001,
                0.0,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.01,
                0.0,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.01,
                0.0
            ],
            [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                3000.0
            ]
        ],
        "Zl": [],
        "Zl_0": [],
        "Zl_e": [],
        "Zu": [],
        "Zu_0": [],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_type": "NONLINEAR_LS",
        "cost_type_0": "NONLINEAR_LS",
        "cost_type_e": "NONLINEAR_LS",
        "yref": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "yref_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "yref_e": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "zl": [],
        "zl_0": [],
        "zl_e": [],
        "zu": [],
        "zu_0": [],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/ozzey/Desktop/Projects/NPField/env/lib/python3.11/site-packages/numpy/core/include",
        "/usr/include/python3.11"
    ],
    "dims": {
        "N": 30,
        "nbu": 3,
        "nbx": 5,
        "nbx_0": 5,
        "nbx_e": 0,
        "nbxe_0": 5,
        "ng": 0,
        "ng_e": 0,
        "nh": 0,
        "nh_0": 0,
        "nh_e": 0,
        "np": 676,
        "nphi": 0,
        "nphi_0": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_0": 0,
        "nr_e": 0,
        "ns": 0,
        "ns_0": 0,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 0,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 0,
        "nsh_0": 0,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_0": 0,
        "nsphi_e": 0,
        "nu": 3,
        "nx": 5,
        "ny": 9,
        "ny_0": 9,
        "ny_e": 6,
        "nz": 0
    },
    "json_file": "acados_mpc_npfield.json",
    "model": {
        "con_h_expr": null,
        "con_h_expr_0": null,
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_0": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_0": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_0": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": null,
        "cost_expr_ext_cost_0": null,
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": null,
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": "@1=((4.5<=t_point)&&(t_point<5)), @2=y_expr(vertcat(sym_p, x, y, theta)){0}, @3=((4<=t_point)&&(t_point<4.5)), @4=((3.5<=t_point)&&(t_point<4)), @5=((3<=t_point)&&(t_point<3.5)), @6=((2.5<=t_point)&&(t_point<3)), @7=((2<=t_point)&&(t_point<2.5)), @8=((1.5<=t_point)&&(t_point<2)), @9=((1<=t_point)&&(t_point<1.5)), @10=((0.5<=t_point)&&(t_point<1)), @11=((0<=t_point)&&(t_point<0.5)), vertcat(x, y, v, theta, t_point, a, w, T, ((@1?@2[9]:0)+((!@1)?((@3?@2[8]:0)+((!@3)?((@4?@2[7]:0)+((!@4)?((@5?@2[6]:0)+((!@5)?((@6?@2[5]:0)+((!@6)?((@7?@2[4]:0)+((!@7)?((@8?@2[3]:0)+((!@8)?((@9?@2[2]:0)+((!@9)?((@10?@2[1]:0)+((!@10)?((@11?@2[0]:0)+((!@11)?@2[0]:0)):0)):0)):0)):0)):0)):0)):0)):0)):0)))",
        "cost_y_expr_0": "@1=((4.5<=t_point)&&(t_point<5)), @2=y_expr(vertcat(sym_p, x, y, theta)){0}, @3=((4<=t_point)&&(t_point<4.5)), @4=((3.5<=t_point)&&(t_point<4)), @5=((3<=t_point)&&(t_point<3.5)), @6=((2.5<=t_point)&&(t_point<3)), @7=((2<=t_point)&&(t_point<2.5)), @8=((1.5<=t_point)&&(t_point<2)), @9=((1<=t_point)&&(t_point<1.5)), @10=((0.5<=t_point)&&(t_point<1)), @11=((0<=t_point)&&(t_point<0.5)), vertcat(x, y, v, theta, t_point, a, w, T, ((@1?@2[9]:0)+((!@1)?((@3?@2[8]:0)+((!@3)?((@4?@2[7]:0)+((!@4)?((@5?@2[6]:0)+((!@5)?((@6?@2[5]:0)+((!@6)?((@7?@2[4]:0)+((!@7)?((@8?@2[3]:0)+((!@8)?((@9?@2[2]:0)+((!@9)?((@10?@2[1]:0)+((!@10)?((@11?@2[0]:0)+((!@11)?@2[0]:0)):0)):0)):0)):0)):0)):0)):0)):0)):0)))",
        "cost_y_expr_e": "@1=((4.5<=t_point)&&(t_point<5)), @2=y_expr(vertcat(sym_p, x, y, theta)){0}, @3=((4<=t_point)&&(t_point<4.5)), @4=((3.5<=t_point)&&(t_point<4)), @5=((3<=t_point)&&(t_point<3.5)), @6=((2.5<=t_point)&&(t_point<3)), @7=((2<=t_point)&&(t_point<2.5)), @8=((1.5<=t_point)&&(t_point<2)), @9=((1<=t_point)&&(t_point<1.5)), @10=((0.5<=t_point)&&(t_point<1)), @11=((0<=t_point)&&(t_point<0.5)), vertcat(x, y, v, theta, t_point, ((@1?@2[9]:0)+((!@1)?((@3?@2[8]:0)+((!@3)?((@4?@2[7]:0)+((!@4)?((@5?@2[6]:0)+((!@5)?((@6?@2[5]:0)+((!@6)?((@7?@2[4]:0)+((!@7)?((@8?@2[3]:0)+((!@8)?((@9?@2[2]:0)+((!@9)?((@10?@2[1]:0)+((!@10)?((@11?@2[0]:0)+((!@11)?@2[0]:0)):0)):0)):0)):0)):0)):0)):0)):0)):0)))",
        "disc_dyn_expr": null,
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "(T*vertcat((v*cos(theta)), (v*sin(theta)), a, w, 1))",
        "f_impl_expr": "(vertcat(x_dot, y_dot, v_dot, theta_dot, t_point_dot)-(T*vertcat((v*cos(theta)), (v*sin(theta)), a, w, 1)))",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "robot_model",
        "nu_original": null,
        "p": "sym_p",
        "t": [],
        "u": "vertcat(a, w, T)",
        "x": "vertcat(x, y, v, theta, t_point)",
        "xdot": "vertcat(x_dot, y_dot, v_dot, theta_dot, t_point_dot)",
        "z": "0x0"
    },
    "name": "robot_model",
    "parameter_values": [
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100,
        100
    ],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 0.8333333333333334,
        "alpha_min": 0.05,
        "alpha_reduction": 0.7,
        "collocation_type": "GAUSS_LEGENDRE",
        "cost_discretization": "EULER",
        "custom_templates": [],
        "custom_update_copy": true,
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eps_sufficient_descent": 0.0001,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "fixed_hess": 0,
        "full_step_dual": 0,
        "globalization": "FIXED_STEP",
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "initialize_t_slacks": 0,
        "integrator_type": "ERK",
        "levenberg_marquardt": 3.0,
        "line_search_use_sufficient_descent": 0,
        "model_external_shared_lib_dir": "/home/ozzey/Desktop/Projects/NPField/MPC/script/_l4c_generated",
        "model_external_shared_lib_name": "y_expr",
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 15,
        "nlp_solver_step_length": 1.0,
        "nlp_solver_tol_comp": 1e-06,
        "nlp_solver_tol_eq": 0.1,
        "nlp_solver_tol_ineq": 1e-06,
        "nlp_solver_tol_stat": 0.1,
        "nlp_solver_type": "SQP",
        "print_level": 0,
        "qp_solver": "PARTIAL_CONDENSING_HPIPM",
        "qp_solver_cond_N": 10,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 100,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 0,
        "reg_epsilon": 0.0001,
        "regularize_method": "NO_REGULARIZE",
        "shooting_nodes": [
            0.0,
            0.8333333333333334,
            1.6666666666666667,
            2.5,
            3.3333333333333335,
            4.166666666666667,
            5.0,
            5.833333333333333,
            6.666666666666666,
            7.499999999999999,
            8.333333333333332,
            9.166666666666666,
            10.0,
            10.833333333333334,
            11.666666666666668,
            12.500000000000002,
            13.333333333333336,
            14.16666666666667,
            15.000000000000004,
            15.833333333333337,
            16.66666666666667,
            17.500000000000004,
            18.333333333333336,
            19.166666666666668,
            20.0,
            20.833333333333332,
            21.666666666666664,
            22.499999999999996,
            23.33333333333333,
            24.16666666666666,
            24.999999999999993
        ],
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1,
            1
        ],
        "tf": 25,
        "time_steps": [
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334,
            0.8333333333333334
        ]
    },
    "zoro_description": null
}